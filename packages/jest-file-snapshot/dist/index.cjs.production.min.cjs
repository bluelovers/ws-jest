"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("fs-extra"),t=require("path"),n=require("filenamify"),a=require("jest-matcher-utils");function _interopDefaultLegacy(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var s,i=_interopDefaultLegacy(n);function isEqual(e,t){return Buffer.isBuffer(e)?e.equals(t):e===t}function currentSnapshotFileName(e){return t.join(t.dirname(e.testPath),"__file_snapshots__",`${i.default(e.currentTestName,{replacement:"-"}).replace(/\s/g,"-")}-${e.assertionCalls}`)}function toMatchFile(n,s,i={}){const{isNot:o,snapshotState:u}=this,r="toMatchFile",l=null!=s?s:currentSnapshotFileName(this),p=t.basename(l);i={diff:Object.assign({expand:!1,contextLines:5,aAnnotation:"Snapshot"},i.diff)};const f={isNot:o,promise:this.promise};if("none"===u._updateSnapshot&&!e.pathExistsSync(l))return u.unmatched++,{pass:o,message:()=>`New output file ${a.EXPECTED_COLOR(p)} was ${a.RECEIVED_COLOR("not written")}.\n\nThe update flag must be explicitly passed to write a new snapshot.\n\nThis is likely because this test is run in a ${a.EXPECTED_COLOR("continuous integration (CI) environment")} in which snapshots are not written by default.\n\n`};let c=!1,message=()=>a.matcherHint(r,void 0,p,f);if(e.pathExistsSync(l)){const t=e.readFileSync(l,Buffer.isBuffer(n)?null:"utf8");if(o)isEqual(n,t)?(u.unmatched++,c=!0):c=!1;else if(isEqual(n,t))c=!0;else if("all"===u._updateSnapshot)c=!0,e.outputFileSync(l,n),u.updated++;else{u.unmatched++;const e=Buffer.isBuffer(n)||Buffer.isBuffer(t)?"":`\n\n${a.diff(t,n,i.diff)}`;message=()=>a.matcherHint(r,void 0,p,f)+e}}else c=!0,o||"new"!==u._updateSnapshot&&"all"!==u._updateSnapshot?(u.unmatched++,message=()=>`The output file ${a.EXPECTED_COLOR(t.basename(l))} ${a.RECEIVED_COLOR("doesn't exist")}.`):(e.outputFileSync(l,n),u.added++);return{pass:c,message}}exports.EnumUpdateSnapshot=void 0,(s=exports.EnumUpdateSnapshot||(exports.EnumUpdateSnapshot={})).none="none",s.new="new",s.all="all";var o={toMatchFile};exports.currentSnapshotFileName=currentSnapshotFileName,exports.default=o,exports.toMatchFile=toMatchFile;
//# sourceMappingURL=index.cjs.production.min.cjs.map
