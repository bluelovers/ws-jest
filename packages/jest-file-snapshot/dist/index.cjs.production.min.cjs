"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("fs-extra"),t=require("path"),s=require("filenamify"),a=require("jest-matcher-utils");function _interopDefaultLegacy(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var n=_interopDefaultLegacy(s);function isEqual(e,t){return Buffer.isBuffer(e)?e.equals(t):e===t}function toMatchFile(s,i,u={}){const{isNot:r,snapshotState:o}=this,f=null!=i?i:t.join(t.dirname(this.testPath),"__file_snapshots__",`${n.default(this.currentTestName,{replacement:"-"}).replace(/\s/g,"-")}-${this.assertionCalls}`);if(u={diff:Object.assign({expand:!1,contextLines:5,aAnnotation:"Snapshot"},u.diff)},"none"===o._updateSnapshot&&!e.existsSync(f))return o.unmatched++,{pass:r,message:()=>`New output file ${a.EXPECTED_COLOR(t.basename(f))} was ${a.RECEIVED_COLOR("not written")}.\n\nThe update flag must be explicitly passed to write a new snapshot.\n\nThis is likely because this test is run in a ${a.EXPECTED_COLOR("continuous integration (CI) environment")} in which snapshots are not written by default.\n\n`};if(e.existsSync(f)){const n=e.readFileSync(f,Buffer.isBuffer(s)?null:"utf8");if(r)return isEqual(s,n)?(o.unmatched++,{pass:!0,message:()=>`Expected received content ${a.RECEIVED_COLOR("to not match")} the file ${a.EXPECTED_COLOR(t.basename(f))}.`}):{pass:!1,message:()=>""};if(isEqual(s,n))return{pass:!0,message:()=>""};if("all"===o._updateSnapshot)return e.outputFileSync(f,s),o.updated++,{pass:!0,message:()=>""};{o.unmatched++;const e=Buffer.isBuffer(s)||Buffer.isBuffer(n)?"":`\n\n${a.diff(n,s,u.diff)}`;return{pass:!1,message:()=>`Received content ${a.RECEIVED_COLOR("doesn't match")} the file ${a.EXPECTED_COLOR(t.basename(f))}.${e}`}}}return r||"new"!==o._updateSnapshot&&"all"!==o._updateSnapshot?(o.unmatched++,{pass:!0,message:()=>`The output file ${a.EXPECTED_COLOR(t.basename(f))} ${a.RECEIVED_COLOR("doesn't exist")}.`}):(e.outputFileSync(f,s),o.added++,{pass:!0,message:()=>""})}exports.default={toMatchFile},exports.toMatchFile=toMatchFile;
//# sourceMappingURL=index.cjs.production.min.cjs.map
