"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("type-detect"),t=require("@lazy-assert/check-basic");function n(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var r,o=n(e);function i(e,n){Object.entries(exports.EnumTypeDetect).forEach((function([t,n]){a(e,t,(function(){this.an(n)}))})),s(e,"integer",t.isInt,n),s(e,"float",t.isFloat,n),s(e,"infinity",t.isInfinity,n),s(e,"nan",t.isNaN,n),s(e,"zero",t.isZero,n)}function s(e,t,n,r){return a(e,t,(function(){let e=r.flag(this,"object");u(this,t,n(e),e)}))}function a(e,t,n,r,o){return e.Assertion.addChainableMethod(t,o||function(...e){e.length&&this.deep.equal(...e)},n)}function u(e,t,n,r){return e.assert(n,`expected #{this} to be an ${t}`,`expected #{this} to not be an ${t}`,r)}function c(e){return(e||require("chai")).use(i)}exports.EnumTypeDetect=void 0,(r=exports.EnumTypeDetect||(exports.EnumTypeDetect={})).array="Array",r.boolean="boolean",r.date="Date",r.function="function",r.number="number",r.object="Object",r.regexp="RegExp",r.string="string";const p=o.default;var f={install:c};exports.ChaiPlugin=i,exports.ChaiPluginAssertType=i,exports._assertType=u,exports.addToAssertion=a,exports.addToAssertionLazy=s,exports.default=f,exports.install=c,exports.list=function(){return Object.keys(exports.EnumTypeDetect).concat(["float","integer"]).sort()},exports.typeOf=p;
//# sourceMappingURL=index.cjs.production.min.cjs.map
